# Name of the workflow
name: CI/CD Pipeline

# Specifies that this workflow is triggered on every 'push' event to the repository
on: push

# Defines the jobs that the workflow will execute
jobs:
  # Job ID, can be anything, named 'build' here
  build:
    # Specifies the type of virtual environment the job runs on, here it's the latest version of Ubuntu
    runs-on: ubuntu-latest

    # Series of steps to be run as part of the 'build' job
    steps:
    # Step 1: Checks out the repository code under $GITHUB_WORKSPACE, so our workflow can access it
    - uses: actions/checkout@v2
    
    # Step 2: Sets up Docker Buildx (an extended build tool for Docker) in the workflow environment
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    # Step 3: Logs into Docker Hub using the provided username and password stored in GitHub Secrets
    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}  # GitHub Secret storing Docker Hub username
        password: ${{ secrets.DOCKER_PASSWORD }}  # GitHub Secret storing Docker Hub password

    # Step 4: Builds the Docker image and pushes it to Docker Hub, tagging it with 'latest'
    - name: Build and push Docker image
      uses: docker/build-push-action@v2
      with:
        push: true  # Enables pushing the built image to Docker Hub
        tags: ${{ secrets.DOCKER_USERNAME }}/project-2:latest  # Tags the image using the Docker Hub username from GitHub Secrets and names the image 'project-2'

